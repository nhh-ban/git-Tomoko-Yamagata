setwd("C:/Users/littl/ban400/git-Tomoko-Yamagata")
cwd()
getwd()
#load packages
library(tidyverse)
library(ggplot2)
#load packages
library(tidyverse)
#Read text data
raw_text <- readLines(con = "C:/Users/littl/ban400/git-Tomoko-Yamagata/suites_dw_Table1.txt")
df_galaxy<-
read.delim("suites_dw_Table1.txt",
header = FALSE,
sep = "|",
skip = 14
)
#Add column's names from row 13
colnames(df_galaxy)<-
readLines("suites_dw_Table1.txt")[13] %>%
strsplit(split = "\\|") %>% unlist()
df_galaxy %>%
ggplot(aes(x=` a_26  `))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(` a_26  `, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(` a_26  `, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
# Read the txt file
raw_text2 <- readLines(con = "C:/Users/littl/ban400/git-Tomoko-Yamagata/UCNG_Table4.txt")
df_galaxy2 <-
read.delim("UCNG_Table4.txt",
header = FALSE,
sep = "|",
skip = 2
)
View(df_galaxy2)
colnames(df_galaxy2)<-
readLines("UCNG_Table4.txt")[1] %>%
strsplit(split = "\\|") %>% unlist()
colnames(df_galaxy2)<-
readLines("UCNG_Table4.txt")[1] %>%
strsplit(split = "\\|") %>% unlist()
View(df_galaxy)
quantile(df_galaxy$` a_26  `)
quantile(df_galaxy$` a_26  `, na.rm=TRUE)
quantile(df_galaxy$` a_26  `, na.rm=TRUE)[1]
df_galaxy %>%
filter(quantile(df_galaxy$` a_26  `, na.rm=TRUE)[1]) %>%
ggplot(aes(x=` a_26  `))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(` a_26  `, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(` a_26  `, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
quantile(df_galaxy,0.25)
quantile(df_galaxy,0.25, na.rm = TRUE)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[1]
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[2]
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
df_galaxy %>%
ggplot(aes(x=` a_26  `))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(` a_26  `, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(` a_26  `, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[3]
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[2]
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
df_galaxy %>%
ggplot(aes(x=` a_26  `))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(` a_26  `, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(` a_26  `, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
left_join(x= df_galaxy2, y = df_galaxy, by= name)
left_join(x= df_galaxy2, y = df_galaxy)
df_galaxy3 <- left_join(x= df_galaxy2, y = df_galaxy)
View(df_galaxy3)
df_galaxy3 %>%
ggplot(aes(x=`  cz  `))+
geom_histogram(aes(y=  y= `   D   `),
df_galaxy3 %>%
ggplot(aes(x=`  cz  `))+
geom_histogram(aes(y=`   D   `),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))+
geom_density(alpha=0.05, fill="pink")
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))+
geom_point()
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))+
geom_point()++
geom_abline()
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))+
geom_point()++
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))+
geom_point()+
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
df_galaxy3 %>%
ggplot(aes(x=`  cz  `, y=`   D   `))+
geom_point()+
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)
df_galaxy3 %>%
ggplot(aes(x=`   D   `, y=`  cz  `))+
geom_point()+
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[2]
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[3]
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <- quantile(df_galaxy$` a_26  `, na.rm=TRUE)[1:2]
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
#limit the data to the 1st 25% of "a_26"
q1_a_26 <-
df_galaxy %>%
filter (` a_26  ` <= quantile(df_galaxy$` a_26  `, na.rm=TRUE)[1:2])
df_galaxy %>%
ggplot(aes(x= q1_a_26))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(q1_a_26, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(q1_a_26, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
View(q1_a_26)
q1_a_26 %>%
ggplot(aes(x= ` a_26  `))+
geom_histogram(aes(y= ..density..),
binwidth=0.5,
colour="black", fill="white")+
geom_density(alpha=0.05, fill="pink")+
geom_vline(aes(xintercept=mean(` a_26  `, na.rm=TRUE)),
color="red", linetype="dashed", size=1)+
geom_vline(aes(xintercept=median(` a_26  `, na.rm=TRUE)),
color="blue", linetype="dashed", size=1)
setwd("C:/Users/littl/ban400/git-Tomoko-Yamagata")
# load packages
library(nycflights13)
library(tidyverse)
# read data
nycflights13::flights
view(flights)
# destination is IAH, average delay
flights %>%
filter(dest== "IAH") %>%
group_by(year, month, day) %>%
summarise(
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
)
# find all flights that departed more than 120 minutes (two hours) late:
flights %>%
filter(dep_delay >120)
flights %>%
filter(month == 1 & day ==1)
flights %>%
filter(month == 1 | month ==2)
flights %>%
filter(month %in% c(1,2))
#sort data by year, month, day and departure time
flights %>%
arrange(year,month,day, dep_time)
# sorts flights from most to least delayed
flights %>%
arrange(desc(dep_delay))
# remove duplicate rows, if any
flights %>%
distinct()
flights %>%
distinct(origin, dest)
# find how many flights with unique origin&destination occured?
flights %>%
count(origin, dest, sort = TRUE)
flights %>%
arr_delay >= 120
flights %>%
filter(arr_delay>= 120)
#2. Flew to Houston (IAH or HOU)
flights %>%
filter(dest %in% c("IAH", "HOU"))
#2. Flew to Houston (IAH or HOU)
flights %>%
filter(dest %in% c("IAH", "HOU"))->e2
View(e2)
#3. Were operated by United, American, or Delta
view(airline)
#3. Were operated by United, American, or Delta
airlines
flights %>%
filter(carrier %in% c("UA", "AA", "DL"))
#4. Departed in summer (July, August, and September)
flights %>%
filter(month %in% c(7,8,9))
#5.Arrived more than two hours late, but didn’t leave late
flights %>%
filights(arr_delay >= 120 & dep_delay <= 0)
#5.Arrived more than two hours late, but didn’t leave late
flights %>%
filter(arr_delay >= 120 & dep_delay <= 0)
#Departed between midnight and 6am (inclusive)
min(flights$dep_time)
#Departed between midnight and 6am (inclusive)
min(flights$dep_time, na.rm = TRUE)
max(flights$dep_time, na.rm = TRUE)
flights %>%
filter(dep_time >0 & dep_time<=0)
flights %>%
filter(dep_time >0 & dep_time<=6)
hour(flights$dep_time)
view(flights)
flights %>%
filter(dep_time == "2400" |(dep_time > 0 & dep_time <=600 ))
flights %>%
filter(dep_time == "2400" |(dep_time > 0 & dep_time <=600 )) %>%
arrange(dep_time)
#6.Were delayed by at least an hour, but made up over 30 minutes in flight
flights %>%
filter(dep_delay >=60,
arr_delay <= dep_delay-30
)
#6.Were delayed by at least an hour, but made up over 30 minutes in flight
flights %>%
filter(dep_delay >=60,
arr_delay < dep_delay-30
)
#1. arrange() to sort all missing values to the start
flights %>%
filter(is.na(dep_time))
#1. arrange() to sort all missing values to the start
flights %>%
arrange(is.na(dep_time))
#1. arrange() to sort all missing values to the start
flights %>%
arrange(desc(is.na(dep_time)))
#2-1. Sort flights to find the most delayed flights.
flights %>%
arrange(desc(dep_delay),desc(arr_delay))
#2-2. Find the flights that left earliest.
filights %>%
arrange(dep_time)
#2-2. Find the flights that left earliest.
filights %>%
arrange(dep_time)
#2-2. Find the flights that left earliest.
flights %>%
arrange(dep_time)
#3. Sort flights to find the fastest (highest speed) flights.
flights %>%
head(arrange(air_time))
#3. Sort flights to find the fastest (highest speed) flights.
flights %>%
head(arrange(air_time))
head(arrange(desc(distance))
#4-1.Which flights travelled the farthest?
flights %>%
#4-1.Which flights travelled the farthest?
flights %>%
head(arrange(desc(distance)))
#4-1.Which flights travelled the farthest?
flights %>%
head(arrange(desc(distance)))
#4-1.Which flights travelled the farthest?
flights %>%
head(arrange(desc(distance)))
#4-2. Which travelled the shortest?
flights %>%
head(arrange(distance))
# Exercise5.4.1
flights %>%
select(dep_time,dep_delay,arr_time,arr_time)
flights %>%
select(dep_time,dep_time,dep_time,dep_time)
vars <- c("year", "month", "day", "dep_delay", "arr_delay")
any_of(vars)
flights %>%
select(any_of(vars))
flights %>%
select(any_of(vars))->zz
View(zz)
select(flights, contains("TIME"))
# The above is selecting both upper and lower cases of "TIME"
select(flights, contains("TIME"), ignore.case = FALSE )
# The above is selecting both upper and lower cases of "TIME"
select(flights, contains("TIME"), ignore.case = FALSE )
# The above is selecting both upper and lower cases of "TIME"
select(flights, contains("TIME", ignore.case = FALSE))
#2. Which plane (tailnum) has the worst on-time record?
flights %>%
mutate(
total_delay = dep_delay+arr_delay
) %>%
arrange(desc(total_delay)) %>%
group_by(tailnum)
#2. Which plane (tailnum) has the worst on-time record?
flights %>%
select(tailnum,dep_delay, arr_delay,total_delay,)
#2. Which plane (tailnum) has the worst on-time record?
flights %>%
select(tailnum,dep_delay, arr_delay)
